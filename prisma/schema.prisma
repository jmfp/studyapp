// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Like{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String    //id of user that liked the content
  //replies     String[]
}

model Comment{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  content     String    
  likes       String[]
  //replies     String[]
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  password    String
  username    String    @unique
  subscribed  Boolean   @default(false)
  courses     Json[]    @default([])//ids of all courses user is in and their progress in each course
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  course_name String
  sections    String[]  @default([])
}

model Information{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  question    String    //id of question after information is provided
}

model Question {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  question    String    
  answers     Json[]    //answer text and which answer is correct
}

model Section {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  questions   String[]  @default([])//ids of questions
}